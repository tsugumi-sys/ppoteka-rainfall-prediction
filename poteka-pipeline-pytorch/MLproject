name: mlflow_pipeline

entry_points:
    main:
        parameters:
            # config.yaml
            model_name: string
            scaling_method: string
            weights_initializer: string
            is_obpoint_labeldata:
                type: string
                default: true
            multi_parameter_model_return_sequences:
                type: string
                default: false
            single_parameter_model_return_sequences:
                type: string
                default: true
            use_dummy_data:
                type: string
                default: false
            input_parameters: string
            
            # train/train.yaml
            train_epochs:
                type: float
                default: 500
            train_batch_size:
                type: float
                default: 4
            train_separately:
                type: string
                default: true
            train_is_max_datasize_limit:
                type: str # NOTE: true or false
            
            # evaluate/evaluate.yaml
            evaluate_save_attention_maps:
                type: string
                default: false

        command: |
            python -m main \
                model_name={model_name} \
                scaling_method={scaling_method} \
                weights_initializer={weights_initializer} \
                is_obpoint_labeldata={is_obpoint_labeldata} \
                multi_parameters_model.return_sequences={multi_parameter_model_return_sequences} \
                single_parameter_model.return_sequences={single_parameter_model_return_sequences} \
                use_dummy_data={use_dummy_data} \
                input_parameters={input_parameters} \
                train.epochs={train_epochs} \
                train.batch_size={train_batch_size} \
                train.train_separately={train_separately} \
                train.is_max_datasize_limit={train_is_max_datasize_limit} \
                evaluate.save_attention_maps={evaluate_save_attention_maps}
